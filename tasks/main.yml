---

- name: initialize uwsgi variables
  set_fact:
    _uwsgi_service_name: '{{uwsgi_service_name|default(uwsgi_default_service_names[ansible_pkg_mgr]|default(""),true)}}'
    _uwsgi_use_upstart: '{{uwsgi_use_upstart|default(uwsgi_install != "pkg" and (ansible_os_family != "RedHat" or ansible_distribution_major_version != "7"))|bool}}'
    _uwsgi_use_systemd: '{{uwsgi_use_systemd|default(uwsgi_install != "pkg" and ansible_os_family == "RedHat" and ansible_distribution_major_version == "7")|bool}}'
    _uwsgi_bin: '{{uwsgi_bin|default("",true)}}'

- name: check that uwsgi service name is defined
  fail:
    msg: uwsgi_service_name must be defined
  when: _uwsgi_service_name == ""

- name: check that uwsgi conf path is defined
  fail:
    msg: uwsgi_conf_path must be defined
  when: uwsgi_conf_path == ""

- name: check that uwsgi vassal path is defined
  fail:
    msg: uwsgi_vassal_path must be defined
  when: uwsgi_vassal_path == ""

- name: check that only upstart or systemd will be used
  fail:
    msg: only one of uwsgi_use_upstart or uwsgi_use_systemd should be enabled
  when: _uwsgi_use_upstart and _uwsgi_use_systemd

- name: install uwsgi packages via system package manager
  action:
    module: '{{ansible_pkg_mgr}}'
    name: '{{item.name|default(item)}}{{item.version|default(false)|ternary("==" + item.version|default(""),"")}}'
    state: 'present'
  with_items: '{{uwsgi_os_packages}}'
  when: uwsgi_install != ""

- name: install uwsgi packages via pip
  pip:
    name: '{{item.name|default(item)}}'
    version: '{{item.version|default(omit,true)}}'
    virtualenv: '{{uwsgi_virtualenv|default(omit,true)}}'
  with_items: '{{uwsgi_pip_packages}}'
  when: uwsgi_install == "pip"

- name: install upstart packages for running uwsgi
  action:
    module: '{{ansible_pkg_mgr}}'
    name: '{{item}}'
    state: present
  with_items: '{{uwsgi_upstart_packages}}'
  when: _uwsgi_use_upstart

- name: set uwsgi binary path when using virtualenv
  set_fact:
    _uwsgi_bin: '{{_uwsgi_bin|default(uwsgi_virtualenv + "/bin/uwsgi",true)}}'
  when: (_uwsgi_use_upstart or _uwsgi_use_systemd) and uwsgi_install == "pip" and uwsgi_virtualenv

- name: find uwsgi binary path if not provided
  command: which uwsgi
  when: (_uwsgi_use_upstart or _uwsgi_use_systemd) and not _uwsgi_bin
  changed_when: false
  failed_when: not _uwsgi_bin_which.stdout
  register: _uwsgi_bin_which

- name: update uwsgi binary path
  set_fact:
    _uwsgi_bin: '{{_uwsgi_bin_which.stdout}}'
  when: (_uwsgi_use_upstart or _uwsgi_use_systemd) and not _uwsgi_bin

- name: add upstart uwsgi configuration
  template:
    src: '{{uwsgi_upstart_template}}'
    dest: '{{uwsgi_upstart_path}}'
  when: _uwsgi_use_upstart
  notify:
    - restart uwsgi

- name: add systemd uwsgi configuration
  template:
    src: '{{uwsgi_systemd_template}}'
    dest: '{{uwsgi_systemd_path}}'
  when: _uwsgi_use_systemd
  notify:
    - restart uwsgi

- name: make sure uwsgi conf directory exists
  file:
    path: '{{uwsgi_conf_path|dirname}}'
    state: directory
  when: uwsgi_conf_template != ""

- name: add uwsgi conf if not present
  template:
    src: '{{uwsgi_conf_template}}'
    dest: '{{uwsgi_conf_path}}'
    force: '{{uwsgi_conf_force}}'
  when: uwsgi_conf_template != ""

- name: configure whether uwsgi emperor runs in tyrant mode
  lineinfile:
    dest: '{{uwsgi_conf_path}}'
    regexp: '^#*?\s*?{{item.name}}\s*?='
    line: "{{item.name}} = {{item.value}}"
  with_items:
    - name: emperor-tyrant
      value: '{{uwsgi_emperor_tyrant|bool}}'
    - name: cap
      value: 'setgid,setuid'
  notify:
    - restart uwsgi

- name: make sure uwsgi vassal path exists
  file:
    path: '{{uwsgi_vassal_path}}'
    state: directory

- name: configure any vassals defined
  template:
    src: uwsgi-vassal.ini.j2
    dest: '{{uwsgi_vassal_path}}/{{item.name|mandatory}}.ini'
    owner: '{{uwsgi_emperor_tyrant|ternary(item.uid|default(omit),omit)}}'
    group: '{{uwsgi_emperor_tyrant|ternary(item.gid|default(omit),omit)}}'
  with_items: '{{uwsgi_vassals|default([])}}'

- name: remove any vassals no longer needed
  file:
    path: '{{uwsgi_vassal_path}}/{{item}}.ini'
    state: absent
  with_items: '{{uwsgi_vassals_to_remove|default([])}}'

- name: start and enable the uwsgi service
  service:
    name: '{{_uwsgi_service_name}}'
    state: started
    enabled: true
